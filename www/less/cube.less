// Configuration

@faceColor: @black;
@lineColor: @white;
@size: 150px;
@halfSize: @size / 2;
@perspective: 600px;
@duration: 0.4s;


// Utils

.hCenter (@theWidth) {
  left: 50%;
  margin-left: -@theWidth / 2;
}

.red {
  .corners polygon, .cross polygon {
    fill: @red;
  }
}

.animation-defaults {
  animation-duration: @duration;
  animation-fill-mode: forwards;
}


// Structure

#viewport {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  perspective: @perspective;
}

#cubes {
  transform-style: preserve-3d;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  perspective-origin:50% 50%;
  transform: translate3d(0px, @halfSize, 0px) rotateX(0deg) rotateY(45deg) rotateZ(0deg);
}

.face {
  position:absolute;
  .animation-defaults;
  bottom: @size;
  .hCenter(@size);
  .background rect {
    fill-opacity: 0.8;
    fill:@faceColor;
  }
  .corners polygon, .cross polygon {
    fill:@lineColor;
  }
}

// Animations

.floor-from {
  transform: translateY(@size) translateZ(@halfSize);
}

.floor-to {
  transform: translateY(@size) translateZ(@halfSize) rotateX(-90deg);
}

.left-from {
  transform: translateX(-@halfSize) rotateY(-90deg) rotateX(90deg);
}

.left-to {
  transform: translateX(-@halfSize) rotateY(-90deg) rotateX(0deg);
}

.back-from {
  transform: translateX(-@size) translateZ(-@halfSize) rotateY(90deg);
}

.back-to {
  transform: translateX(-@size) translateZ(-@halfSize) rotateY(180deg);
}

.right-from {
  transform: translateZ(-@halfSize);
}

.right-to {
  transform: translateZ(-@halfSize) rotateY(90deg);
}

.front-from {
  transform: translateZ(@halfSize) rotateY(-90deg);
}

.front-to {
  transform: translateZ(@halfSize) rotateY(0deg);
}

.face {
  &.floor {
    .floor-from;
    transform-origin: 0 0;
    animation-name: floor-animation;
  }
  &.left {
    .left-from;
    transform-origin: @halfSize @size;
    animation-name: left-animation;
    animation-delay: @duration;
  }
  &.back {
    .back-from;
    transform-origin: @size 0;
    animation-name: back-animation;
    animation-delay: @duration * 2;
  }
  &.right {
    .right-from;
    transform-origin: @size 0;
    animation-name: right-animation;
    animation-delay: @duration * 3;
  }
  &.front {
    .front-from;
    transform-origin: @size 0;
    animation-name: front-animation;
    animation-delay: @duration * 4;
  }
}

// Keyframes

@keyframes floor-animation {
  from {
    .floor-from;
  }
  to {
    .floor-to;
  }
}

@keyframes left-animation {
  from {
    .left-from;
  }
  to {
    .left-to;
  }
}

@keyframes back-animation {
  from {
    .back-from;
  }
  to {
    .back-to;
  }
}

@keyframes right-animation {
  from {
    .right-from;
  }
  to {
    .right-to;
  }
}

@keyframes front-animation {
  from {
    .front-from;
  }
  to {
    .front-to;
  }
}
